{"version":3,"sources":["../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","unselected_measurement_type","unselected_participants","unselected_metric_type","unselected_summary","scope","target","measurement_type","participants","metric_type","summary","query","datasource","metricFindQuery","rawQuery","option","panelCtrl","refresh","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;IAEaA,0B,WAAAA,0B;;;AAEX,sCAAYC,MAAZ,EAAoBC,SAApB,EAAgC;AAAA;;AAAA,wJACxBD,MADwB,EAChBC,SADgB;;AAG9B,UAAKC,2BAAL,GAAmC,kBAAnC;AACA,UAAKC,uBAAL,GAA+B,cAA/B;AACA,UAAKC,sBAAL,GAA8B,aAA9B;AACA,UAAKC,kBAAL,GAA0B,SAA1B;;AAEA,UAAKC,KAAL,GAAaN,MAAb;AACA,UAAKO,MAAL,CAAYC,gBAAZ,GACM,MAAKD,MAAL,CAAYC,gBAAZ,IACG,MAAKN,2BAFd;AAGA,UAAKK,MAAL,CAAYE,YAAZ,GACM,MAAKF,MAAL,CAAYE,YAAZ,IACG,MAAKN,uBAFd;AAGA,UAAKI,MAAL,CAAYG,WAAZ,GACM,MAAKH,MAAL,CAAYG,WAAZ,IACG,MAAKN,sBAFd;AAGA,UAAKG,MAAL,CAAYI,OAAZ,GACM,MAAKJ,MAAL,CAAYI,OAAZ,IACG,MAAKN,kBAFd;AAlB8B;AAqB/B;;;;+BAEUO,K,EAAO;AAChB,aAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgC;AACrCF,eAAOA,KAD8B;AAErCJ,0BAAkB,KAAKD,MAAL,CAAYC,gBAFO;AAGrCC,sBAAc,KAAKF,MAAL,CAAYE,YAHW;AAIrCC,qBAAa,KAAKH,MAAL,CAAYG,WAJY;AAKrCC,iBAAS,KAAKJ,MAAL,CAAYI;AALgB,OAAhC,CAAP;AAOD;;;uCAEkB;AACjB,WAAKJ,MAAL,CAAYQ,QAAZ,GAAuB,CAAC,KAAKR,MAAL,CAAYQ,QAApC;AACD;;;qCAEgBC,M,EAAQ;AACvB,UAAIA,UAAU,mBAAd,EAAmC;AACjC,aAAKT,MAAL,CAAYE,YAAZ,GAA2B,KAAKN,uBAAhC;AACA,aAAKI,MAAL,CAAYG,WAAZ,GAA0B,KAAKN,sBAA/B;AACA,aAAKG,MAAL,CAAYI,OAAZ,GAAsB,KAAKN,kBAA3B;AACD,OAJD,MAIO,IAAIW,UAAU,cAAd,EAA8B;AACnC,aAAKT,MAAL,CAAYG,WAAZ,GAA0B,KAAKN,sBAA/B;AACA,aAAKG,MAAL,CAAYI,OAAZ,GAAsB,KAAKN,kBAA3B;AACD,OAHM,MAGA,IAAIW,UAAU,WAAd,EAA2B;AAChC,aAAKT,MAAL,CAAYG,WAAZ,GAA0B,KAAKN,sBAA/B;AACD;AACD,WAAKa,SAAL,CAAeC,OAAf,GAXuB,CAWG;AAC3B;;;;EAnD6CC,c;;AAsDhDpB,2BAA2BqB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector)  {\n    super($scope, $injector);\n\n    this.unselected_measurement_type = 'measurement type';\n    this.unselected_participants = 'participants';\n    this.unselected_metric_type = 'metric type';\n    this.unselected_summary = 'summary'\n\n    this.scope = $scope;\n    this.target.measurement_type\n        = this.target.measurement_type\n          || this.unselected_measurement_type;\n    this.target.participants\n        = this.target.participants\n          || this.unselected_participants;\n    this.target.metric_type\n        = this.target.metric_type\n          || this.unselected_metric_type;\n    this.target.summary\n        = this.target.summary\n          || this.unselected_summary;\n  }\n\n  getOptions(query) {\n    return this.datasource.metricFindQuery({\n      query: query,\n      measurement_type: this.target.measurement_type,\n      participants: this.target.participants,\n      metric_type: this.target.metric_type,\n      summary: this.target.summary\n    });\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal(option) {\n    if (option == 'measurement types') {\n      this.target.participants = this.unselected_participants;\n      this.target.metric_type = this.unselected_metric_type;\n      this.target.summary = this.unselected_summary;\n    } else if (option == 'participants') {\n      this.target.metric_type = this.unselected_metric_type;\n      this.target.summary = this.unselected_summary;\n    } else if (option == 'summaries') {\n      this.target.metric_type = this.unselected_metric_type;\n    } \n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}